<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:model="clr-namespace:SP_FTP_Manager.Model"
                    xmlns:cc="clr-namespace:SP_FTP_Manager.CustomControls"
                    xmlns:enum ="clr-namespace:SP_FTP_Manager.Enums"
                    xmlns:converter="clr-namespace:SP_FTP_Manager.Converters"
                    xmlns:colors="clr-namespace:SP_FTP_Manager.Resources">

    <converter:InvertBoolConverter x:Key="InvertBoolConverter"/>

    <DataTemplate DataType="{x:Type model:JobModel}" x:Key="jobTemplate">
        <Border  Height="55" Background="{x:Static colors:Colors.JobTemplateBackground}" 
                 Tag="{Binding DataContext,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=cc:ChromeWindow}}"
                 Margin="0,1" CornerRadius="2" Padding="2">
            <Border.ContextMenu>
                <ContextMenu DataContext="{Binding PlacementTarget.Tag,RelativeSource={RelativeSource Self}}" 
                             IsEnabled="{Binding PlacementTarget.Tag.IsApplying,Converter={StaticResource InvertBoolConverter},RelativeSource={RelativeSource Self}}">
                    <MenuItem Header="Cancel Current" Command="{Binding CancelCurrentJobCommand}" 
                              CommandParameter="{Binding PlacementTarget.DataContext,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ContextMenu}}"/>
                    <Separator/>
                    <MenuItem Header="Retry" Command="{Binding RetryCommand}"
                              CommandParameter="{Binding PlacementTarget.DataContext,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ContextMenu}}"/>
                    <MenuItem Header="Retry All Fails" Command="{Binding RetryAllFailedCommand}"/>
                    <MenuItem Header="Retry All" Command="{Binding RetryAllCommand}"/>
                    <Separator/>
                    <MenuItem Header="Clear All Successes" Command="{Binding ClearSuccessfulJobsCommand}"/>
                    <MenuItem Header="Clear All" Command="{Binding ClearAllCommand}"/>
                    <Separator  />
                    <MenuItem Header="Ignore" Command="{Binding IgnoreCommand}"
                              CommandParameter="{Binding PlacementTarget.DataContext,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ContextMenu}}"/>
                    <Separator/>
                    <MenuItem Header="Delete" Command="{Binding DeleteJobCommand}"
                              CommandParameter="{Binding PlacementTarget.DataContext,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ContextMenu}}"/>
                </ContextMenu>
            </Border.ContextMenu>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40" />
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="40" />
                </Grid.ColumnDefinitions>

                <Image Grid.Column="0" Width="35" Height="35">
                    <Image.Resources>
                        <Style TargetType="Image">
                            <Style.Triggers >
                                <DataTrigger Binding="{Binding DataContext.Type,RelativeSource={RelativeSource Self}}"  Value="File">
                                    <Setter Property="Source" Value="/Resources/Icon/File_128x128.png" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DataContext.Type,RelativeSource={RelativeSource Self}}"  Value="Directory">
                                    <Setter Property="Source" Value="/Resources/Icon/Folder_128x128.png" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Resources>
                </Image>

                <UniformGrid Grid.Column="1" Rows="2">
                    <TextBlock Text="{Binding Name}" />
                    <TextBlock Text="{Binding Caption}"/>
                </UniformGrid>

                <UniformGrid Grid.Column="2" Rows="3">
                    <TextBlock Text="{Binding Size,StringFormat='{}{0} B'}"/>
                    <ProgressBar Value="{Binding Percentage}" Height="5"/>
                    <UniformGrid Columns="2" >
                        <TextBlock HorizontalAlignment="Left">
                            <TextBlock.Resources>
                                <Style TargetType="ToolTip">
                                    <Setter Property="FontFamily" Value="Arial" />
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="FontFamily" Value="Segoe mdl2 assets" />
                                    <Setter Property="FontSize" Value="16" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DataContext.Status,RelativeSource={RelativeSource  Self}}" Value="Operating">
                                            <Setter Property="Text" Value="&#xEBE7;" />
                                            <Setter Property="Foreground" Value="CornflowerBlue" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding DataContext.Status,RelativeSource={RelativeSource  Self}}" Value="Success">
                                            <Setter Property="Text" Value="&#xE8FB;" />
                                            <Setter Property="Foreground" Value="Green" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding DataContext.Status,RelativeSource={RelativeSource  Self}}" Value="Failure">
                                            <Setter Property="Text" Value="&#xE783;" />
                                            <Setter Property="Foreground" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding DataContext.Status,RelativeSource={RelativeSource  Self}}" Value="Canceled">
                                            <Setter Property="Text" Value="&#xE711;" />
                                            <Setter Property="Foreground" Value="Black" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding DataContext.Status,RelativeSource={RelativeSource  Self}}" Value="Ignored">
                                            <Setter Property="Text" Value="&#xE7B3;" />
                                            <Setter Property="TextDecorations">
                                                <Setter.Value>
                                                    <TextDecorationCollection>
                                                        <TextDecoration Location="Strikethrough"  PenOffset="1.1">
                                                            <TextDecoration.Pen>
                                                                <Pen Brush="Red" Thickness="2"/>
                                                            </TextDecoration.Pen>
                                                        </TextDecoration>
                                                    </TextDecorationCollection>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Foreground" Value="Black" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding DataContext.Status,RelativeSource={RelativeSource  Self}}" Value="Retry">
                                            <Setter Property="Text" Value="&#xE72C;" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding DataContext.Status,RelativeSource={RelativeSource  Self}}" Value="Pending">
                                            <Setter Property="Text" Value="&#xED5A;" />
                                            <Setter Property="Foreground" Value="RosyBrown" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Resources>
                        </TextBlock>
                        <TextBlock Text="{Binding Percentage,StringFormat='{}{0}%'}" HorizontalAlignment="Right"/>

                    </UniformGrid>
                </UniformGrid>

                
                <Image Grid.Column="3"  Width="35" Height="35" >
                    <Image.Resources>
                    <Style TargetType="Image">
                            <Setter Property="ToolTip" Value="{Binding DataContext.Title,RelativeSource={RelativeSource Self}}" />
                            <Style.Triggers >
                            <DataTrigger Binding="{Binding DataContext.Title,RelativeSource={RelativeSource Self}}"  Value="Download">
                                <Setter Property="Source" Value="/Resources/Icon/Download_128x128.png" />
                            </DataTrigger>
                                <DataTrigger Binding="{Binding DataContext.Title,RelativeSource={RelativeSource Self}}"  Value="Delete">
                                    <Setter Property="Source" Value="/Resources/Icon/Delete_128x128.png" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DataContext.Title,RelativeSource={RelativeSource Self}}"  Value="Upload">
                                    <Setter Property="Source" Value="/Resources/Icon/Upload_128x128.png" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DataContext.Title,RelativeSource={RelativeSource Self}}"  Value="Rename">
                                    <Setter Property="Source" Value="/Resources/Icon/Rename_128x128.png" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DataContext.Title,RelativeSource={RelativeSource Self}}"  Value="MakeDirectory">
                                    <Setter Property="Source" Value="/Resources/Icon/CreateFolder_128x128.png" />
                                </DataTrigger>
                            </Style.Triggers>
                    </Style>
                    </Image.Resources>
                </Image>


            </Grid>
        </Border>
    </DataTemplate>
</ResourceDictionary>